# See Dockerfile_conan for a simpler version that relies on the already installed python
# version

# Uses gcc8 for glibc 2.28
FROM conanio/gcc8:latest

ENV DEBIAN_FRONTEND noninteractive

# install requirements for python installation
RUN sudo -E apt-get update \
  && sudo -E apt-get install -y libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev curl \
    libncursesw5-dev xz-utils libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev

# setup python environment
RUN pyenv install 3.8 \
  && pyenv global 3.8
RUN pip install "conan==1.59.0" catkin_pkg numpy wheel auditwheel

# install patchelf
RUN wget https://github.com/NixOS/patchelf/releases/download/0.17.2/patchelf-0.17.2-x86_64.tar.gz \
  && tar -xzf patchelf-0.17.2-x86_64.tar.gz \
  && sudo -E ln -s $HOME/bin/patchelf /bin/patchelf \
  && patchelf --version

# setup conan for python dependencies via bincrafters remote
RUN conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan \
  && conan config set general.revisions_enabled=1

# checkout code
RUN mkdir src
WORKDIR /home/conan/src
RUN git clone https://github.com/fzi-forschungszentrum-informatik/lanelet2.git

# compile
WORKDIR /home/conan/src/lanelet2
RUN conan source . \
  && conan create . lanelet2/stable --build=missing \
  && conan install lanelet2/1.2.0@lanelet2/stable --build=missing -g virtualenv

SHELL ["/bin/bash", "-c"]
WORKDIR /home/conan
RUN source /home/conan/src/lanelet2/activate.sh \
  && cp -r $(dirname $(dirname $(which tutorial.py)))/python3.8/site-packages/lanelet2 .
RUN sed 's/{{ version }}/'"1.2.0"'/' /home/conan/src/lanelet2/lanelet2_python/setup.py.template > /home/conan/setup.py

RUN source /home/conan/src/lanelet2/activate.sh \
  && pip wheel -w broken-dist/ . \
  && auditwheel repair -w dist/ --plat manylinux_2_28_x86_64 broken-dist/*.whl

# to extract the wheel run:
# $ docker run -it -v /path/to/some/local/folder:/dist lanelet2:3.8 /bin/bash
# then inside the container:
# $ sudo cp dist/lanelet2-1.2.0-cp38-cp38-manylinux_2_28_x86_64.whl /dist/.
