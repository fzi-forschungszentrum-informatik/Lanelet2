name: Lanelet2 CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build dependencies
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: lanelet2_src
          load: true
          target: lanelet2_src

      - name: Create output directory
        run: mkdir -p ${{ github.workspace }}/output

      - name: Do stuff inside the container
        uses: addnab/docker-run-action@v3
        with:
          image: lanelet2_src
          shell: bash
          options: -v ${{ github.workspace }}/dist:/dist
          run: |
            set -e
            export WORKSPACE=$(pwd)

            # find python version
            export PYTHON_VERSION=$(python3 -c "import sys; print('.'.join([str(i) for i in sys.version_info[:2]]))")

            # build lanelet2 with python
            source /opt/ros/noetic/setup.bash
            catkin config --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DPYTHON_VERSION=$PYTHON_VERSION
            catkin build --no-status
            sudo cp -r $HOME/workspace/devel/.private/lanelet2_python/lib/python3/dist-packages/lanelet2 $WORKSPACE/lanelet2
            sudo cp $HOME/workspace/src/lanelet2/lanelet2_python/setup.py $WORKSPACE/setup.py
          
            # install patchelf
            cd $HOME
            wget https://github.com/NixOS/patchelf/releases/download/0.17.2/patchelf-0.17.2-x86_64.tar.gz
            tar -xzf patchelf-0.17.2-x86_64.tar.gz
            sudo ln -s $HOME/bin/patchelf /bin/patchelf
            patchelf --version

            # install pip
            export PATH="$PATH:$HOME/.local/bin"
            cd $HOME
            wget -q https://bootstrap.pypa.io/get-pip.py
            python3 get-pip.py
            pip install auditwheel

            # repair wheel
            cd $WORKSPACE
            pip wheel -w dist/ .
            auditwheel repair -w dist/ --plat linux_x86_64 dist/*.whl

            # copy wheel to dist directory
            sudo cp -r $WORKSPACE/dist/* /dist

      - name: Store wheel
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish:
    # TODO: activate guard in production
    # if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Restore wheel
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

      # can't publish to PyPI due to unsupported platform tag.
      # - name: Publish package to TestPyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #     repository_url: https://test.pypi.org/legacy/
