name: Lanelet2 CD

on:
  push:
    branches:
      - master
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        # builds for 3.10 and 3.11 are not yet working
        # python-version: ["3.8", "3.9", "3.10", "3.11"]
        python-version: ["3.8", "3.9"]
    runs-on: ubuntu-latest
    steps:
      - name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Create build container
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          file: .github/conan_dockerfile/Dockerfile
          tags: lanelet2_conan
          load: true
          target: lanelet2_conan
          build-args: PYTHON_VERSION=${{ matrix.python-version }}

      - name: Create output directory
        run: mkdir -p ${{ github.workspace }}/output

      - name: Package lanelet2 in build container
        uses: addnab/docker-run-action@v3
        with:
          image: lanelet2_conan
          shell: bash
          options: -v ${{ github.workspace }}/dist:/dist
          run: |
            set -e
            # set env variables
            export HOME=/home/conan
            export LANELET2_DIR=$HOME/src/lanelet2
            cd $LANELET2_DIR
            source activate.sh
            export LANELET2_VERSION=$(conan inspect . --raw version)
            echo "Lanelet2 version: $LANELET2_VERSION"
            export LETAS_PACKAGE_DIR=$(python -c "import lanelet2; from pathlib import Path; print(Path(lanelet2.__file__).parent)")
            echo "Lanelet2 package directory: $LANELET2_PACKAGE_DIR"

            # source
            cd $HOME
            cp -r $LETAS_PACKAGE_DIR .
            sed 's/{{ version }}/'"$LANELET2_VERSION"'/' $LANELET2_DIR/lanelet2_python/setup.py.template > setup.py

            # repair wheel
            cd $HOME
            pip wheel -w broken-dist/ .
            auditwheel repair -w dist/ --plat manylinux_2_27_x86_64 broken-dist/*.whl
            
            # copy wheel to dist directory
            sudo cp -r $HOME/dist/* /dist

      - name: Store wheel
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  test:
    needs: build
    strategy:
      matrix:
        # test only on currently supported version
        # python-version: ["3.8", "3.9", "3.10", "3.11"]
        python-version: ["3.8", "3.9"]
        os: ["ubuntu-22.04", "ubuntu-20.04"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Restore wheel
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install wheel
        # use dist/ directory as package source instead of pypi.org
        run: pip install lanelet2 --no-index --find-links dist/
      - name: Test wheel
        run: python -c "import lanelet2; assert lanelet2.core.Point2d(0, 0, 0) is not None"

  publish:
    if: contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Restore wheel
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*

      - name: Publish package to PyPI
        if: github.repository == 'fzi-forschungszentrum-informatik/Lanelet2'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
