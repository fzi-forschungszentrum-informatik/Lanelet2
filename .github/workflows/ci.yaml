name: Docker

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  # Run tests for any PRs.
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
          rosdistro: [noetic, galactic, humble]
          include:
          - rosdistro: noetic
            os: 20.04
            ros: ros
          - rosdistro: galactic
            os: 20.04
            ros: ros2
          - rosdistro: humble
            os: 22.04
            ros: ros2
    steps:
      -
        name: Setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Setup docker cache
        uses: actions/cache@v2
        with:
          path: /tmp/.docker-cache
          key: ${{runner.os}}-docker
      -
        name: Build dependencies
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: lanelet2_base:${{ matrix.rosdistro }}
          cache-from: type=local,src=/tmp/.docker-cache
          cache-to: type=local,dest=/tmp/.docker-cache
          build-args: |
            DISTRIBUTION=${{ matrix.os }}
            ROS_DISTRO=${{ matrix.rosdistro }}
            ROS=${{ matrix.ros }}
          target: lanelet2_deps
      -
        name: Build Lanelet2
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          tags: lanelet2:${{ matrix.rosdistro }}
          cache-from: type=local,src=/tmp/.docker-cache
          load: true
          build-args: |
            DEV=1
            DISTRIBUTION=${{ matrix.os }}
            ROS_DISTRO=${{ matrix.rosdistro }}
            ROS=${{ matrix.ros }}
          target: lanelet2
      -
        name: Run Lanelet2 Tests
        run: |
          set -ex
          if [ $ROS = "ros" ]; then
            TEST_CMD="catkin build --no-status --catkin-make-args run_test && source /opt/ros/${{matrix.rosdistro}}}/setup.bash && catkin_test_results --verbose"
          else
            TEST_CMD="colcon test --return-code-on-test-failure"
          fi
          docker run --rm -i lanelet2 /bin/bash -c "$CMD"
